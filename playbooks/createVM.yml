---
- name: Create a VM with custom resources
  hosts: localhost
  become: true
  gather_facts: false
  vars_files:
    - vcenter_vars.yml
    - vm_list.yml
  tasks:
    - name: Debug vm_list
      debug:
        var: vm_list
    # - name: Create VMs dynamically
    #   community.vmware.vmware_guest:
    #     hostname: "{{ vcenter.hostname }}"
    #     username: "{{ vcenter.username }}"
    #     password: "{{ vcenter.password }}"
    #     validate_certs: "{{ validate_certs }}"
    #     datacenter: "{{ datacenter.name }}"
    #     cluster: "{{ datacenter.cluster }}"
    #     folder: "{{ item.folder }}"
    #     template: "{{ item.template }}"
    #     name: "{{ item.name }}"
    #     guest_id: "{{ item.guest_id }}"
    #     state: "{{ item.state}}"
    #     wait_for_ip_address: "{{ item.wait_for_ip_address }}"
    #     hardware:
    #       num_cpus: "{{ item.num_cpus }}"
    #       memory_mb: "{{ item.memory_mb }}"
    #     networks: "{{ item.networks }}"
    #     disk: "{{ item.disk}}"
    #     cdrom: "{{ item.cdrom}}"
    #   loop: "{{ vm_details }}"
    #   register: vm

      
    - name: Run commands on VM
      community.vmware.vmware_vm_shell:
        hostname: "{{ vcenter.hostname }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        datacenter: "{{ datacenter.name }}"
        cluster: "{{ datacenter.cluster }}"
        folder: "{{ item.folder }}"
        vm_id: "{{ item.name }}"
        vm_username: root
        vm_password: root
        vm_shell: "/usr/bin/hostnamectl"
        vm_shell_args:
          - "set-hostname new_hostname > /tmp/$$.txt 2>&1"
        wait_for_process: true
        timeout: 2000  
      loop: "{{ vm_details }}"


    - name: Gather VMware Tools info
      community.vmware.vmware_guest_tools_info:
          hostname: "{{ vcenter.hostname }}"
          username: "{{ vcenter.username }}"
          password: "{{ vcenter.password }}"
          validate_certs: "{{ validate_certs }}"
          name: "{{ item.name }}"
      register: vm_tools_info
      loop: "{{ vm_details }}"
