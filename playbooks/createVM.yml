---
- name: Create a VM with custom resources
  hosts: localhost
  gather_facts: false
  vars_files:
    - vcenter_vars.yml
    - vm_list.yml
  tasks:
    - name: Debug vm_list
      debug:
        var: vm_list
    - name: Create VMs dynamically
      community.vmware.vmware_guest:
        hostname: "{{ vcenter.hostname }}"
        username: "{{ vcenter.username }}"
        password: "{{ vcenter.password }}"
        validate_certs: "{{ validate_certs }}"
        datacenter: "{{ datacenter.name }}"
        cluster: "{{ datacenter.cluster }}"
        folder: "{{ item.folder }}"
        # template: "{{ item.template }}"
        name: "{{ item.name }}"
        guest_id: "{{ item.guest_id }}"
        state: "{{ item.state}}"
        wait_for_ip_address: "{{ item.wait_for_ip_address }}"
        hardware:
          num_cpus: "{{ item.num_cpus }}"
          memory_mb: "{{ item.memory_mb }}"
        networks: "{{ item.networks }}"
        disk: "{{ item.disk}}"
        cdrom: "{{ item.cdrom}}"
        customization:
          script_text: |
            #!/bin/bash
            # Install VMware Tools if not already installed
            if ! dpkg -l | grep -q open-vm-tools; then
              echo "Installing VMware Tools..."
              apt-get update -y && apt-get install -y open-vm-tools
            else
              echo "VMware Tools already installed"
            fi

            # Restart VMware Tools service
            systemctl restart open-vm-tools

            # Verify VMware Tools is running
            if systemctl is-active --quiet open-vm-tools; then
              echo "VMware Tools is running"
            else
              echo "VMware Tools service failed to start"
            fi
      loop: "{{ vm_details }}"
      register: vm

 
    # - name: Install VMware Tools on the VM
    #   community.vmware.vmware_vm_shell:
    #     hostname: "{{ vcenter.hostname }}"
    #     username: "{{ vcenter.username }}"
    #     password: "{{ vcenter.password }}"
    #     datacenter: "{{ datacenter.name }}"
    #     cluster: "{{ datacenter.cluster }}"
    #     folder: "{{ item.folder }}"
    #     vm_id: "{{ item.name }}"
    #     vm_username: admin
    #     vm_password: admin
    #     vm_shell: "/bin/bash"
    #     vm_shell_args:
    #       - "systemctl status NetworkManger"
    #     wait_for_process: true
    #     timeout: 2000
    #   loop: "{{ vm_details }}"

      
    # - name: Install or update the vm-tools
    #   vmware.vmware_rest.vcenter_vm_tools:
    #     vcenter_hostname: "{{ vcenter.hostname }}"
    #     vcenter_username: "{{ vcenter.username }}"
    #     vcenter_password: "{{ vcenter.password }}"
    #     upgrade_policy: UPGRADE_AT_POWER_CYCLE
    #     vm: vm-49279
        # state: connect


    - name: Gather VMware Tools info
      community.vmware.vmware_guest_tools_info:
          hostname: "{{ vcenter.hostname }}"
          username: "{{ vcenter.username }}"
          password: "{{ vcenter.password }}"
          validate_certs: "{{ validate_certs }}"
          name: "{{ item.name }}"
      register: vm_tools_info
      loop: "{{ vm_details }}"

