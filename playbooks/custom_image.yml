- name: Create Custom Kickstart ISO for RHEL/CentOS
  hosts: localhost
  become: true
  vars_files:
    - ks.cfg
  vars:
    iso_url: "https://10.1.0.14/folder/ISO/rhel-9.3-x86_64-dvd.iso"  # URL of the CentOS ISO
    iso_file: "/tmp/centos7.iso"  # Temporary location for downloading the ISO
    mount_point: "/mnt/iso"
    custom_iso_dir: "/tmp/custom_iso"
    kickstart_file: ks.cfg  # Path to your custom Kickstart file
    new_iso_file: "/tmp/custom_cent_os.iso"  # Path for the new ISO

  tasks:
    - name: Install required packages for ISO creation
      package:
        name:
          - genisoimage
        state: present

    - name: Download the CentOS ISO from the internet
      get_url:
        url: "{{ iso_url }}"
        dest: "{{ iso_file }}"
        mode: '0644'

    - name: Create a directory for mounting ISO
      file:
        path: "{{ mount_point }}"
        state: directory

    - name: Mount the base ISO image
      ansible.posix.mount:
        path: "{{ mount_point }}"
        src: "{{ iso_file }}"
        fstype: iso9660
        state: mounted

    - name: Create a directory for the custom ISO content
      file:
        path: "{{ custom_iso_dir }}"
        state: directory

    - name: Copy the contents of the ISO to the custom directory
      command: cp -r {{ mount_point }}/* {{ custom_iso_dir }}

    - name: Copy the custom Kickstart file
      copy:
        src: "{{ kickstart_file }}"
        dest: "{{ custom_iso_dir }}/ks.cfg"

    - name: Modify the boot configuration to point to Kickstart file
      lineinfile:
        path: "{{ custom_iso_dir }}/isolinux/isolinux.cfg"
        regexp: '^append'
        line: "append ks=file:/ks.cfg"

    - name: Create the custom ISO image
      command:
        cmd: mkisofs -o {{ new_iso_file }} -b isolinux/isolinux.bin -c isolinux/boot.cat -no-emul-boot -boot-load-size 4 -boot-info-table -R -J {{ custom_iso_dir }}

    - name: Unmount the ISO
      ansible.posix.mount:
        path: "{{ mount_point }}"
        state: unmounted

    - name: Clean up the temporary directory
      file:
        path: "{{ custom_iso_dir }}"
        state: absent
